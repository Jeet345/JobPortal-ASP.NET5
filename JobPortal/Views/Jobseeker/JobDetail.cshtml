@using Microsoft.AspNetCore.Http
@model JobPortal.Models.Job

@{
    ViewData["Title"] = "Job Detail";
    Layout = "~/Views/Shared/_JobseekerLayout.cshtml";
}

<div class="job-detail-header">

    <div class="container">

        <div class="box">

            <h1 class="title">Job Detail</h1>

            <h3 class="nav">
                <a href="/">Home</a>
                <span class="icon"><i class="fas fa-angle-right"></i></span>
                <span>Job Detail</span>
            </h3>

        </div>

    </div>

</div>


<div class="job-detail-body">

    <div class="sticky-sidebox">
        <h2 class="title">Job Details</h2>
        <div class="box">
            <div class="icon"><i class="fal fa-map-marker-alt"></i></div>
            <div class="desc">
                <h4>Address</h4>
                <p>@Model.JobLocation</p>
            </div>
        </div>
        <div class="box">
            <div class="icon"><i class="fal fa-dollar-sign"></i></div>
            <div class="desc">
                <h4>Salary</h4>
                <p>@Model.JobSalary &#8377; Monthly</p>
            </div>
        </div>
        <div class="box">
            <div class="icon"><i class="far fa-shield"></i></div>
            <div class="desc">
                <h4>Experience</h4>
                <p>@Model.JobExperience</p>
            </div>
        </div>
    </div>

    <div class="detail-box">
        <h1 class="job-title">@Model.JobTitle</h1>
        <div class="title-line">
            <li>
                <b>Job Type</b>
                @Model.JobType
            </li>
            <li>
                <b>Posting Date</b>
                @Model.JobPostingDate
            </li>
            <li>
                <b><i class="fal fa-map-marker-alt"></i></b>
                @Model.JobLocation
            </li>
        </div>
        <p class="detail">
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the
            industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and
            scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap
            into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the
            release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing
            software like Aldus PageMaker including versions of Lorem Ipsum.
        </p>

        <div class="job-desc">
            <h2 class="title">Job Description</h2>

            <p class="detail">
                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the
                industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type
                and
                scrambled it to make a type specimen book. It has survived not only five centuries, but also the
                leap
                into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with
                the
                release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop
                publishing
                software like Aldus PageMaker including versions of Lorem Ipsum.
            </p>
        </div>

        <div class="job-desc">
            <h2 class="title">Job SkillSet</h2>

            <p class="detail">
                @Model.JobSkills
            </p>
        </div>

        <div class="job-desc">
            <h2 class="title">Job Qualifications</h2>

            <p class="detail">
                @Model.JobEducation
            </p>
        </div>

        <form asp-action="JobApplyRequest" method="post" data-ajax-loading="#myLoader" data-ajax="true" data-ajax-complete="myComplete" data-ajax-success="mySuccess" data-ajax-failure="myFailure">

            <input type="hidden" name="JobId" value="@Model.Id" />

            @if (!String.IsNullOrEmpty(Context.Session.GetString("userId")))
            {
                <button type="submit" class="job-btn">
                    Apply This Job
                    <i class="fas fa-spinner fa-spin" id="myLoader"></i>
                </button>
            }
            else
            {
                <a href="/Login" class="job-btn">Login To Apply Job</a>
            }
        </form>

    </div>

</div>



@section Scripts
{

    <script>

        function mySuccess(data) {

            if (data == 1) {
                toastr.success('You have successfully applied for this Job ..');
            }
            else if (data == 2) {
                toastr.error("You have alredy applied for this job !!");
            }
            else {
                toastr.error("Something wan't wrong !!");
            }

        }

        function myFailure(data) {
            alert("Error : " + data.status);
        }

        function myComplete(data) {
            console.log(data);
        }

    </script>

}
